{"version":3,"sources":["components/Flashcard/index.jsx","components/FlashcardList/index.jsx","services/helpers.js","components/App/index.jsx","index.js"],"names":["Flashcard","flashcard","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","className","style","onClick","ref","map","option","FlashcardList","flashcards","id","decodeString","str","textArea","document","createElement","innerHTML","value","App","setFlashcards","categories","setCategories","categoryEl","amountEl","axios","get","then","res","data","trivia_categories","results","questionItem","index","correct_answer","incorrect_answers","a","Date","now","sort","random","onSubmit","e","preventDefault","params","amount","category","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c8d4beb9.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst Flashcard = ({ flashcard }) => {\r\n  const [flip, setFlip] = useState(false);\r\n  const [height, setHeight] = useState(\"initial\");\r\n\r\n  const frontEl = useRef();\r\n  const backEl = useRef();\r\n\r\n  function setMaxHeight() {\r\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\r\n    const backHeight = backEl.current.getBoundingClientRect().height;\r\n\r\n    setHeight(Math.max(frontHeight, backHeight, 100));\r\n  }\r\n\r\n  useEffect(setMaxHeight, [\r\n    flashcard.question,\r\n    flashcard.answer,\r\n    flashcard.options,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", setMaxHeight);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", setMaxHeight);\r\n    };\r\n  }, []);\r\n\r\n  const handleFlip = () => {\r\n    setFlip(!flip);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`card ${flip ? \"flip\" : \"\"}`}\r\n      style={{ height: height }}\r\n      onClick={handleFlip}\r\n    >\r\n      <div className=\"front\" ref={frontEl}>\r\n        {flashcard.question}\r\n        <div className=\"flashcard-options\">\r\n          {flashcard.options?.map((option) => (\r\n            <div className=\"flashcard-option\" key={option}>\r\n              {option}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"back\" ref={backEl}>\r\n        {flashcard.answer}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Flashcard;\r\n","import React from \"react\";\r\nimport Flashcard from \"../Flashcard\";\r\n\r\nconst FlashcardList = ({ flashcards }) => {\r\n  return (\r\n    <div className=\"card-grid\">\r\n      {flashcards?.map((flashcard) => (\r\n        <Flashcard flashcard={flashcard} key={flashcard.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlashcardList;\r\n","export const decodeString = function (str) {\r\n  const textArea = document.createElement(\"textarea\");\r\n  textArea.innerHTML = str;\r\n  return textArea.value;\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport FlashcardList from \"../FlashcardList\";\n// import { getAllCards } from \"../../services/api\";\nimport { decodeString } from \"../../services/helpers.js\";\nimport axios from \"axios\";\n\nimport \"../../styles/styles.css\";\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  const categoryEl = useRef();\n  const amountEl = useRef();\n\n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api_category.php\").then((res) => {\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n\n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api.php?amount=10\").then((res) => {\n      setFlashcards(\n        res.data.results.map((questionItem, index) => {\n          const answer = decodeString(questionItem.correct_answer);\n          const options = [\n            ...questionItem.incorrect_answers.map((a) => decodeString(a)),\n            answer,\n          ];\n          return {\n            id: `${index}-${Date.now()}`,\n            question: decodeString(questionItem.question),\n            answer: answer,\n            options: options.sort(() => Math.random() - 0.5),\n          };\n        })\n      );\n    });\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    axios\n      .get(\"https://opentdb.com/api.php\", {\n        params: {\n          amount: amountEl.current.value,\n          category: categoryEl.current.value,\n        },\n      })\n      .then((res) => {\n        setFlashcards(\n          res.data.results.map((questionItem, index) => {\n            const answer = decodeString(questionItem.correct_answer);\n            const options = [\n              ...questionItem.incorrect_answers.map((a) => decodeString(a)),\n              answer,\n            ];\n            return {\n              id: `${index}-${Date.now()}`,\n              question: decodeString(questionItem.question),\n              answer: answer,\n              options: options.sort(() => Math.random() - 0.5),\n            };\n          })\n        );\n      });\n  };\n\n  return (\n    <>\n      <form className=\"header\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category</label>\n          <select id=\"category\" ref={categoryEl}>\n            {categories?.map(({ id, name }) => (\n              <option value={id} key={id}>\n                {name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Number of questions</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            min=\"1\"\n            step=\"1\"\n            defaultValue=\"10\"\n            ref={amountEl}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <button type=\"submit\" className=\"btn\">\n            Generate\n          </button>\n        </div>\n      </form>\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}